{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/herna/mi-chess/app/ChessBoardClient.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Chess } from \"chess.js\";\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\nexport default function ChessBoardClient() {\r\n  const [game, setGame] = useState<Chess | null>(null);\r\n  const [fen, setFen] = useState(\"start\");\r\n\r\n  useEffect(() => {\r\n    const newGame = new Chess();\r\n    setGame(newGame);\r\n    setFen(newGame.fen());\r\n  }, []);\r\n\r\n  const onPieceDrop = (source: string, target: string) => {\r\n    if (!game) return false;\r\n\r\n    const move = game.move({ from: source, to: target, promotion: \"q\" });\r\n    if (move === null) return false;\r\n\r\n    setFen(game.fen());\r\n    return true;\r\n  };\r\n\r\n  if (!game) return <div>Cargando tablero...</div>;\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 40 }}>\r\n      <Chessboard position={fen} onPieceDrop={onPieceDrop} boardWidth={480} />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAe;IAC/C,MAAM,CAAC,KAAK,OAAO,GAAG,IAAA,yKAAQ,EAAC;IAE/B,IAAA,0KAAS;sCAAC;YACR,MAAM,UAAU,IAAI,+JAAK;YACzB,QAAQ;YACR,OAAO,QAAQ,GAAG;QACpB;qCAAG,EAAE;IAEL,MAAM,cAAc,CAAC,QAAgB;QACnC,IAAI,CAAC,MAAM,OAAO;QAElB,MAAM,OAAO,KAAK,IAAI,CAAC;YAAE,MAAM;YAAQ,IAAI;YAAQ,WAAW;QAAI;QAClE,IAAI,SAAS,MAAM,OAAO;QAE1B,OAAO,KAAK,GAAG;QACf,OAAO;IACT;IAEA,IAAI,CAAC,MAAM,qBAAO,6LAAC;kBAAI;;;;;;IAEvB,qBACE,6LAAC;QAAI,OAAO;YAAE,SAAS;YAAQ,gBAAgB;YAAU,WAAW;QAAG;kBACrE,cAAA,6LAAC,4KAAU;YAAC,UAAU;YAAK,aAAa;YAAa,YAAY;;;;;;;;;;;AAGvE;GA3BwB;KAAA","debugId":null}}]
}